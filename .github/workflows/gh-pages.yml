name: gh-pages  # Workflow name

on:
  # Runs on pushes targeting the default main branch
  push:
    branches: ["main"]  # Trigger the workflow on pushes to the main branch

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:  # Uncomment to enable manual execution

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read  # Read access to repository content
  pages: write  # Write access to deploy to GitHub Pages
  id-token: write  # Permission for authentication

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job (creates the Jekyll site)
  build:
    runs-on: ubuntu-latest  # Runs on Ubuntu virtual machine
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v4
      - name: Setup Pages configuration for deployment
        uses: actions/configure-pages@v5
      - name: Build Jekyll site using jekyll-build-pages action
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./     # Source directory (current directory)
          destination: ./_site  # Destination directory for built site
      - name: Upload built site as an artifact
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          name: build-artifact  # Artifact name
          path: ./_site  # Path to built site

  # Deployment job (deploys the built site)
  deploy:
    environment:
      name: github-pages  # Environment name for deployment
      url: ${{ steps.deployment.outputs.page_url }}  # Deployment URL
    runs-on: ubuntu-latest  # Runs on Ubuntu virtual machine
    needs: build  # Requires successful completion of the "build" job
    steps:
      - name: Download built site artifact
        uses: actions/download-artifact@v3  # Download artifact from build job
        with:
          name: build-artifact  # Artifact name (same as upload)
      - name: Deploy built site to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Deploys the artifact to GitHub Pages
      - name: Delete the redundant artifact
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: id: ${{ steps.github-pages.outputs.artifact-id }}
            });

  # Delete workflows
  del_runs:
    runs-on: ubuntu-latest
    needs: deploy
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete workflow runs older than 1 day
        uses: Rubber1Duck/delete-old-workflow-runs@v0.4.0
        with:
          repository: mysrcs/mysrcs.github.io   # Replace with your repository name
          older-than-seconds: 100             # Remove runs older than 1 day
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
